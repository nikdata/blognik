<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nik&#39;s Data Lake</title>
    <link>/</link>
    <description>Recent content on Nik&#39;s Data Lake</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 28 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About Me</title>
      <link>/about/</link>
      <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>I&amp;rsquo;m a Data Scientist at Deere &amp;amp; Company working within the Intelligent Solutions Group in Urbandale, IA. My interests include statistics, data analysis, programming with R, photography, and road cycling.
Education I have a M.S. in Predictive Analytics from Northwestern University and a B.S. in Industrial and Systems Engineering from Northern Illinois University.
All opinions and views are my own and do not represent my employer.</description>
    </item>
    
    <item>
      <title>Tidy Correlations</title>
      <link>/post/tidy-correlations/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tidy-correlations/</guid>
      <description>When creating correlation matrices, one of the hardest things I find is the ability to read it easily. Here’s an example of a correlation table:
 a b x y z a 1.00000000 0.127548585 0.033222037 0.1765430 -0.08899377 b 0.12754858 1.000000000 0.006865677 0.2414983 -0.05343201 x 0.03322204 0.006865677 1.000000000 -0.1045047 0.03734388 y 0.17654300 0.241498328 -0.104504744 1.0000000 0.21812433 z -0.08899377 -0.053432013 0.037343880 0.2181243 1.00000000 In order to find the two variables that have the highest positive or negative correlation is not easy.</description>
    </item>
    
    <item>
      <title>Magic 8 Ball Function</title>
      <link>/post/magic-8-ball-function/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/magic-8-ball-function/</guid>
      <description>In my PREDICT 454 class, one of the R challenges that our professor wanted us to undertake involved creating a simple function that ‘acted’ like the venerable Magic 8 Ball. So let’s get to it!
Prerequisite The function must output one of the following texts:   ‘I don’t see that happening.’ ‘You must be dreaming.’ ‘Chances are good.’ ‘If you work hard and stay focused, then this might happen.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/post/hello-markdown/</link>
      <pubDate>Fri, 30 Dec 2016 21:49:57 -0700</pubDate>
      
      <guid>/post/hello-markdown/</guid>
      <description>This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.  There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown.</description>
    </item>
    
  </channel>
</rss>